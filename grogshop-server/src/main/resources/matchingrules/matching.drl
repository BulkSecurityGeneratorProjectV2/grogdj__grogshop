package grogshop;

import com.grogdj.grogshop.core.model.*;
import org.grogshop.services.api.*;
import org.grogshop.services.impl.*;

global NotificationsService notificationsService;
global MatchingsService matchingsService;


rule "matching bid, not right price"
  when
    // When I have a list that matches with all the bidders 
    $l: Listing($listingTags: tags, $listingPriceRange: priceRange)
    $b: Bid(tags matchp $listingTags, $bidPrice: priceRange[0] < $listingPriceRange[0])
  then
    notificationsService.notifyUser($l.getUserId(), "matching bid tags, not right price("+($listingPriceRange[0]-$bidPrice)+")");
    notificationsService.notifyUser($b.getUserId(), "matching listing tags, not right price ("+($bidPrice-$listingPriceRange[0])+")");
    Matching newMatching = new Matching($l, $b, "Full Match");
    matchingsService.newMatching(newMatching);
    notificationsService.notifyMatching($l.getUserId(), $b.getUserId(),  newMatching);
end


rule "matching bid, best price"
  when
    // When I have a list that matches with all the bidders 
    $l: Listing($listingTags: tags, $listingPriceRange: priceRange)
    $b: Bid(tags matchp $listingTags, priceRange[0] >= $listingPriceRange[0])
  then
    notificationsService.notifyUser($l.getUserId(), "matching listing tags, best price");
    notificationsService.notifyUser($b.getUserId(), "matching bid tags, best price");
    Matching newMatching = new Matching($l, $b, "Full Match");
    matchingsService.newMatching(newMatching);
    notificationsService.notifyMatching($l.getUserId(), $b.getUserId(),  newMatching);
end


rule "matching listings and bids tags"
  when
    
    $l: Listing($listingTags: tags,  $priceRange: priceRange)
    $b: Bid(tags matchp $listingTags, priceRange[0]  inrange  $priceRange)
  then
   // notificationsService.notifyUser($l.getUserId(), "matching listing tags, best price");
   // notificationsService.notifyUser($b.getUserId(), "matching bid tags, best price");
   // Matching newMatching = new Matching($l, $b, "Full Match");
   // matchingsService.newMatching(newMatching);
   // notificationsService.notifyMatching(newMatching);
    
end